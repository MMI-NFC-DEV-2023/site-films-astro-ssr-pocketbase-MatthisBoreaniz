---
import type { ClientResponseError } from "pocketbase";
import Layout from "../../../layouts/Layout.astro";
import type { FilmsResponse } from "../../../pocketbase-typegen";
import { formatDate } from "../../../utilitaires";
export const prerender = false;
const pb = Astro.locals.pb;
let film = {} as FilmsResponse;
const id = Astro.params.id;
let message;
if (id) {
  film = await pb
    .collection("films")
    .getOne(id)
    .catch((error) => {
      console.error("erreur à la recup du film", id, error);
      message = (error as ClientResponseError).message;
      return {} as FilmsResponse;
    });
}

if (Astro.request.method === "POST") {
  const data = await Astro.request.formData();

  const film = await (
    id
      ? pb.collection("films").update(id, data)
      : pb.collection("films").create(data)
  ).catch((error) => {
    console.error("erreur à la sauvegarde du film", id, error);
    message = (error as ClientResponseError).message;
  });
  if (film) {
    return Astro.redirect(
      `/films/${film.id}-${encodeURIComponent(film.titre)}`
    );
  }
}

const personnes = await pb.collection("personnes").getFullList();
---

<Layout pageTitle="Edit de film">
  <form class="*:contents grid grid-cols-2" method="POST">
    <label>
      Titre
      <input required type="text" name="titre" value={film.titre} />
    </label>
    <label>
      Date de sortie
      <input
        type="date"
        name="dateSortie"
        value={formatDate(film.dateSortie)}
      />
    </label>
    <label>
      Langue
      <input type="text" name="langue" value={film.langue} />
    </label>
    <label>
      Durée
      <input type="number" name="duree" value={film.duree} />
    </label>
    <label>
      Producteur
      <select name="producteur">
        <!-- <option value="720527e4grhrr5w">Harry Potter</option>
        <option value="q00u4xevq1fz05l">Leonardo Di Caprio</option> -->
        {
          personnes.map((personne) => (
            <option
              selected={personne.id === film.producteur}
              value={personne.id}
            >
              {personne.nom}
            </option>
          ))
        }
      </select>
    </label>
    <label>
      Scénariste.s
      <div>
        {
          personnes.map((personne) => (
            <label>
              <input checked={film.scenaristes.includes(personne.id)} type="checkbox" name="scenaristes" value={personne.id} />
              {personne.nom}
            </label>
          ))
        }
      </div>
    </label>
    <label>
      Synopsis
      <input type="text" name="synopsis" value={film.synopsis} />
    </label>
    <button>{id ? "Modifier" : "Ajouter"}</button>
  </form>
</Layout>
